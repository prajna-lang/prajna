// func表示声明一个函数, -> i64表示返回值类型
func Add(lhs: i64, rhs: i64) -> i64{
    return lhs + rhs;
}


func CallRecursively(i: i64)->i64{
    if (i == 0) {return 0; }

    return CallRecursively(i - 1);
}

// 若没有返回值类型, 则表示为void
func PrintHi(){
    "Hi\n".Print();
}

func PrintHello(){
    "Hello\n".Print();
}

func Call(fun: __ptr<Func<void>>) {
    fun();
}

@test // @test表示函数的注解, 会被当做测试函数而执行
func TestFunction(){
    test::Assert(Add(3, 7) == 10);
    PrintHi();
    // fun_address表示存储printHi函数的变量, 其类型是函数"指针"类型,
    var fun_address = PrintHi;
    fun_address = PrintHello;
    fun_address();

    test::Assert(CallRecursively(4) == 0);
    test::Assert(CallRecursively(5) == 0);


    Call(PrintHi);
    Call(PrintHello);

}
