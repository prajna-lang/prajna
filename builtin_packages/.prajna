#stage0; // 加入bool, char, void, undef类型
#stage1; // 加入int, Float, __add等模板和操作

use Int<8> as i8;
use Int<16> as i16;
use Int<32> as i32;
use Int<64> as i64;
use Int<128> as i128;

use Uint<8> as u8;
use Uint<16> as u16;
use Uint<32> as u32;
use Uint<64> as u64;
use Uint<128> as u128;

use Float<16> as f16;
use Float<32> as f32;
use Float<64> as f64;
// use Float<128> as f128; // 平台支持不好, 除+,-,*,/外, sin, cos等函数都是错误的结果.

use primitive_type;
use bindings;
use bindings::exit as Exit;

use _debug::__assert;

use _array::Array;

use float::FloatFixedPrinter;
use float::FloatScientificPrinter;
use int;

use _ptr::Ptr;
use dynamic;

use atomic;

use dynamic_array::DynamicArray;

use string::String;

use serializable::Serializable;
use serialize;
use hash::Hashable;

func ExitWithMessage(msg: String) {
    msg.PrintLine();
    Exit(-1);
}

use test;
use debug;

use tensor::Tensor;
use tensor::Layout;
use list::Node;
use list::List;
use dict::ListDict;
use hashdict::HashDict;

use stack::Stack;
use optional::Optional;

use io::Input;

use fs;

use chrono;




func __load_dynamic_library(lib_name: ptr<char>)->i64;
func __get_symbol(lib: i64, symbol_name: ptr<char>)->i64;
func __close_dynamic_library(lib: i64);
