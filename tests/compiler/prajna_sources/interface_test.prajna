interface Say{
    func say();
}

struct SayHi{
}

implement Say for SayHi{
    func say() {
        "Hi\n".Print();
    }
}

struct SayHello{}

implement Say for SayHello{
    func say(){
        "Hello\n".Print();
    }

}

@test
func TestDynamicDispatch(){
    var say_hi = Ptr<SayHi>::New();
    say_hi.say();
    test::Assert(!say_hi.IsNull());

    var say: dynamic<Say> = say_hi.As<Say>();
    say.say();

    var say_hello = Ptr<SayHello>::New();
    say_hello.say();

    say = say_hello.As<Say>();
    say.say();

    var say_hello2 = say.DynamicCast<SayHello>();
    test::Assert(!say_hello2.IsNull());
    say_hello2.say();

    var say_hi2 = say.DynamicCast<SayHi>();
    test::Assert(say_hi2.IsNull());
}

